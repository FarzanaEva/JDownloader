/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package testdownloder;


import java.awt.Color;
import java.io.File;
import java.net.URL;
import java.util.ArrayList;
import java.util.Observable;
import java.util.Observer;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author user-
 */
public class Downloader extends javax.swing.JFrame implements Observer {
    
    private DefaultTableModel model;
    private String saveFilePath="C:\\Users\\user-\\Documents";
    private ArrayList list=new ArrayList();
    private int selectedRow;
    
    public Downloader() {
        
        initComponents();
        
        model=(DefaultTableModel) jTable1.getModel();
        
        jPanel1.setBackground(new Color(255,255,190));
        
        //adding progress bar in table
        ProgressBarUpdate progressBar=new ProgressBarUpdate();
        progressBar.setStringPainted(true);
        jTable1.getColumn("Progress").setCellRenderer(progressBar);
        
        //initially buttons are disable
        pauseButton.setEnabled(false);
        resumeButton.setEnabled(false);
        stopButton.setEnabled(false);
        removeButton.setEnabled(false);
        removeCompletedButton.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        pauseButton = new javax.swing.JButton();
        txtUrl = new javax.swing.JTextField();
        resumeButton = new javax.swing.JButton();
        stopButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        downloadButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        removeCompletedButton = new javax.swing.JButton();
        settings = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("JDownloader");

        pauseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pause.png"))); // NOI18N
        pauseButton.setText("Pause");
        pauseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseButtonActionPerformed(evt);
            }
        });

        resumeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resume.png"))); // NOI18N
        resumeButton.setText("Resume");
        resumeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resumeButtonActionPerformed(evt);
            }
        });

        stopButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stop.png"))); // NOI18N
        stopButton.setText("Stop");
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("URL:");

        downloadButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/download.png"))); // NOI18N
        downloadButton.setText("Download");
        downloadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downloadButtonActionPerformed(evt);
            }
        });

        removeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/remove.png"))); // NOI18N
        removeButton.setText("Remove");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        removeCompletedButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/delete.png"))); // NOI18N
        removeCompletedButton.setText("Remove Completed");
        removeCompletedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeCompletedButtonActionPerformed(evt);
            }
        });

        settings.setIcon(new javax.swing.ImageIcon(getClass().getResource("/option.png"))); // NOI18N
        settings.setText("Settings");
        settings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settingsActionPerformed(evt);
            }
        });

        jTable1.setBackground(new java.awt.Color(153, 255, 153));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "File Name", "File Size(KB)", "Progress", "Status", "Time Left(sec)", "Transfer Rate(KB)", "URL"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtUrl, javax.swing.GroupLayout.PREFERRED_SIZE, 593, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(pauseButton)
                        .addGap(18, 18, 18)
                        .addComponent(resumeButton)
                        .addGap(18, 18, 18)
                        .addComponent(stopButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(removeButton)
                        .addGap(18, 18, 18)
                        .addComponent(removeCompletedButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(settings)
                        .addContainerGap(30, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(downloadButton)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUrl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(downloadButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resumeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pauseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(stopButton)
                    .addComponent(removeButton)
                    .addComponent(removeCompletedButton)
                    .addComponent(settings))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(17, 17, 17)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void downloadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downloadButtonActionPerformed
       
       
       URL verifiedUrl = null;
        try {
            verifiedUrl = new URL(txtUrl.getText());
        } 
        catch (Exception e) {
            System.out.println("Url not varified");
            JOptionPane.showMessageDialog(null, "Url is not correct");
        }

        if (verifiedUrl != null) {
            Download download=new Download(verifiedUrl,saveFilePath);
            list.add(download);
            addRow(download);
            download.addObserver(this);
        } 
        txtUrl.setText(null);
        
    }//GEN-LAST:event_downloadButtonActionPerformed

    
    private void settingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settingsActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser=new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

        chooser.showOpenDialog(this);
        File file = chooser.getSelectedFile();
        System.out.println("FolderPath:" + file);
        String s=file.getPath();
        if(!s.equals(null)){
            
            saveFilePath=s;
            System.out.println("Path:"+s);
        }
    }//GEN-LAST:event_settingsActionPerformed

    private void pauseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pauseButtonActionPerformed
        Download selectedDownload=(Download) list.get(selectedRow);
        selectedDownload.pause();
        refreshRowData(selectedRow);
        updateButtons();
    }//GEN-LAST:event_pauseButtonActionPerformed

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        Download selectedDownload= (Download) list.get(selectedRow);
        selectedDownload.stop();
        refreshRowData(selectedRow);
        updateButtons();
    }//GEN-LAST:event_stopButtonActionPerformed

    private void resumeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resumeButtonActionPerformed
        Download selectedDownload= (Download) list.get(selectedRow);
        selectedDownload.resume();
        refreshRowData(selectedRow);
        updateButtons();
    }//GEN-LAST:event_resumeButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        if(selectedRow != -1){
            model.removeRow(selectedRow);
            list.remove(selectedRow);
            selectedRow=-1;
            updateButtons();
        }
    }//GEN-LAST:event_removeButtonActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        selectedRow=jTable1.getSelectedRow();
        System.out.println("Selected Row="+selectedRow);
        updateButtons();
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void removeCompletedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeCompletedButtonActionPerformed
        int size=list.size();
        for(int i=size-1;i>=0;i--){
            Download download= (Download) list.get(i);
            if(download.getStatusString().equals("Completed")){
                System.out.println("i="+i);
                model.removeRow(i);
                list.remove(i);
            }
        }
        updateButtons();
    }//GEN-LAST:event_removeCompletedButtonActionPerformed
   
    public void addRow(Download download){
        Object rowData[] = new Object[7];
            rowData[0] = download.getFileName();
            rowData[1] = download.getSize();
            rowData[2] = download.getProgressSize();
            rowData[3] = download.getStatusString();
            rowData[4] = download.getRemainingTime();
            rowData[5] = download.getSpeed();
            rowData[6]=download.getUrl(); 
            model.addRow(rowData);
          

    }
    
    public void refreshRowData(int row) {
       Download download=(Download) list.get(row);
       model.setValueAt(download.getFileName(),row,0);
       model.setValueAt(download.getSize(),row,1);
       model.setValueAt(download.getProgressSize(),row,2);
       model.setValueAt(download.getStatusString(),row,3);
       model.setValueAt(download.getRemainingTime(),row,4);
       model.setValueAt(download.getSpeed(),row,5);
       model.setValueAt(download.getUrl(),row,6);
    }
    void updateButtons(){
        if(selectedRow != -1){
            Download download=(Download) list.get(selectedRow);
            String s=download.getStatusString();
            if(s.equals("Downloading"))
            {
                pauseButton.setEnabled(true);
                resumeButton.setEnabled(false);
                stopButton.setEnabled(true);
                removeButton.setEnabled(true);
            }
            else if(s.equals("Paused"))
            {
                System.out.println("buttons update Paused");
                pauseButton.setEnabled(false);
                resumeButton.setEnabled(true);
                stopButton.setEnabled(false);
                removeButton.setEnabled(true);
            }
            else if(s.equals("Stoped")){
                System.out.println("buttons update stop");
                pauseButton.setEnabled(false);
                resumeButton.setEnabled(true);
                stopButton.setEnabled(false);
                removeButton.setEnabled(true);
            }
            else if(s.equals("Completed"))
            {
                pauseButton.setEnabled(false);
                resumeButton.setEnabled(false);
                stopButton.setEnabled(false);
                removeButton.setEnabled(true);
            }
            else if(s.equals("Error"))
            {
                pauseButton.setEnabled(false);
                resumeButton.setEnabled(true);
                stopButton.setEnabled(false);
                removeButton.setEnabled(true);
            }
            else
            {   
                System.out.println("buttons update default");
                pauseButton.setEnabled(false);
                resumeButton.setEnabled(false);
                stopButton.setEnabled(false);
                removeButton.setEnabled(true);
            }
        }
        else {
            pauseButton.setEnabled(false);
            resumeButton.setEnabled(false);
            stopButton.setEnabled(false);
            removeButton.setEnabled(false);
        }
        
        if(!list.isEmpty()){
            int size=list.size();
            boolean enabled=false;
            for(int i=0;i<size;i++){
                Download download=(Download) list.get(i);
                if(download.getStatusString().equals("Completed")){
                    removeCompletedButton.setEnabled(true);
                    enabled=true;
                    break;
                }
            }
            if(!enabled){
                removeCompletedButton.setEnabled(false);
            }
        }
        else{
            
            removeCompletedButton.setEnabled(false);
        }
        
        
    }
    @Override
    public void update(Observable o, Object arg) {
        //System.out.println("Table Refreshed");
        int index=list.indexOf(o);
        refreshRowData(index);
        updateButtons();
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Downloader.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Downloader.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Downloader.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Downloader.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Downloader().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton downloadButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton pauseButton;
    private javax.swing.JButton removeButton;
    private javax.swing.JButton removeCompletedButton;
    private javax.swing.JButton resumeButton;
    private javax.swing.JButton settings;
    private javax.swing.JButton stopButton;
    private javax.swing.JTextField txtUrl;
    // End of variables declaration//GEN-END:variables

   
}
